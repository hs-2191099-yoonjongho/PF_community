server:
  port: 8080
  forward-headers-strategy: native

spring:
  application:
    name: community
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: false
        default_batch_fetch_size: 100
    show-sql: false
  flyway:
    enabled: true
    baseline-on-migrate: true
    placeholders:
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD_HASH: ${ADMIN_PASSWORD_HASH}
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

logging:
  level:
    root: INFO
    com.example.community: DEBUG
    org.hibernate.SQL: off
    org.hibernate.orm.jdbc.bind: off

management:
  endpoints:
    web:
      exposure:
        include: health
      base-path: /actuator
  endpoint:
    health:
      show-details: never

springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false

jwt:
  secret: ${JWT_SECRET}
  access-exp-ms: ${JWT_ACCESS_EXP_MS}
  issuer: ${JWT_ISSUER}

refresh:
  exp-ms: ${REFRESH_EXP_MS}
  cookie:
    name: ${REFRESH_COOKIE_NAME}
    path: ${REFRESH_COOKIE_PATH}
    secure: ${REFRESH_COOKIE_SECURE}
    same-site: ${REFRESH_COOKIE_SAME_SITE}
    domain: ${REFRESH_COOKIE_DOMAIN}

app:
  cors:
    allowed-origins: ${ALLOWED_ORIGINS}
  security:
    token-hash-algorithm: ${SECURITY_HASH_ALGORITHM:SHA-256}
    max-refresh-tokens-per-user: ${MAX_REFRESH_TOKENS:5}
  # 운영도 CORS는 Security에서만. 별도 Origin 인터셉터는 기본 비활성화(필요시 환경변수로만 활성화)
  enable-origin-validation: ${ENABLE_ORIGIN_VALIDATION:false}
  public-base-url: ${PUBLIC_BASE_URL}
  storage:
    provider: local
    local:
      # 프로덕션 환경에서는 컨테이너 내부 경로를 사용
      base-path: /app/uploads
